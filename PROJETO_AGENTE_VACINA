{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1JvMd5qKbIRaaypwC5gozr4UPURh3qqsQ","timestamp":1747443778126},{"file_id":"1-68zX4PF5qTjmAP_yT6yObV4Tr5q_LpR","timestamp":1745950008315}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["%pip -q install google-genai"],"metadata":{"id":"UCCbECexLk_h","executionInfo":{"status":"ok","timestamp":1747494799567,"user_tz":180,"elapsed":2815,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Configura a API Key do Google Gemini\n","\n","import os\n","from google.colab import userdata\n","\n","os.environ[\"GOOGLE_API_KEY\"] = userdata.get('GOOGLE_API_KEY')"],"metadata":{"id":"NfCqHo1tLk8P","executionInfo":{"status":"ok","timestamp":1747494809544,"user_tz":180,"elapsed":522,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Configura o cliente da SDK do Gemini\n","\n","from google import genai\n","\n","client = genai.Client()\n","\n","MODEL_ID = \"gemini-2.0-flash\""],"metadata":{"id":"bV4w0H5TLk5g","executionInfo":{"status":"ok","timestamp":1747494812309,"user_tz":180,"elapsed":290,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Pergunta ao Gemini uma informação mais recente que seu conhecimento\n","\n","from IPython.display import HTML, Markdown\n","\n","# Perguntar pro modelo quando é a próxima imersão de IA ###############################################\n","\n","resposta = client.models.generate_content(\n","    model=MODEL_ID,\n","    contents='Quando é a próxima Imersão IA com Google Gemini da Alura?',\n",")\n","\n","# Exibe a resposta na tela\n","\n","display(Markdown(f\"Resposta:\\n {resposta.text}\"))"],"metadata":{"id":"HwVP7Xi34Zuw","colab":{"base_uri":"https://localhost:8080/","height":197},"executionInfo":{"status":"ok","timestamp":1747444259165,"user_tz":180,"elapsed":2010,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}},"outputId":"890e9818-7e47-4c64-e279-059858f4172e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"Resposta:\n A Alura não tem uma data fixa para a Imersão IA com Google Gemini. A melhor forma de saber quando a próxima edição será realizada é:\n\n*   **Acompanhar as redes sociais e o site da Alura:** A Alura costuma divulgar os lançamentos de seus cursos e imersões em suas redes sociais (como LinkedIn, Instagram, Twitter) e no site oficial.\n*   **Verificar a página da Imersão IA com Google Gemini:** Mesmo que não haja uma data definida, a página do curso no site da Alura ([https://www.alura.com.br/imersao/ia-google-gemini](https://www.alura.com.br/imersao/ia-google-gemini)) pode ter informações sobre a previsão de novas turmas ou um formulário para você se inscrever e receber novidades.\n*   **Entrar em contato com a Alura:** Você pode enviar uma mensagem para a equipe da Alura através do formulário de contato no site ou por meio das redes sociais para perguntar sobre a próxima edição.\n\nEssas são as maneiras mais eficientes de obter informações precisas sobre a próxima Imersão IA com Google Gemini da Alura."},"metadata":{}}]},{"cell_type":"code","source":["# Pergunta ao Gemini uma informação utilizando a busca do Google como contexto\n","\n","response = client.models.generate_content(\n","    model=MODEL_ID,\n","    contents='Quando é a próxima Imersão IA com Google Gemini da Alura?',\n","    config={\"tools\": [{\"google_search\": {}}]}\n","    # Inserir a tool de busca do Google ###############################################\n",")\n","\n","# Exibe a resposta na tela\n","display(Markdown(f\"Resposta:\\n {response.text}\"))"],"metadata":{"id":"yXaZd7iZ4ftw","colab":{"base_uri":"https://localhost:8080/","height":87},"executionInfo":{"status":"ok","timestamp":1747444989809,"user_tz":180,"elapsed":2257,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}},"outputId":"ad871058-7c7a-45b2-86a9-e06bcee7f774"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"Resposta:\n As inscrições para a Imersão IA da Alura + Google Gemini estão abertas até o dia 11 de maio de 2025, domingo, às 23h59min.\n\nA Imersão IA é um programa online e gratuito com o objetivo de ensinar a criar prompts, automatizar tarefas e desenvolver sistemas de agentes autônomos com o Google Gemini. O curso é dividido em cinco aulas online. Ao final da Imersão, você recebe um certificado Alura + Google.\n"},"metadata":{}}]},{"cell_type":"code","source":["# Instalar Framework ADK de agentes do Google ################################################\n","!pip install -q google-adk\n"],"metadata":{"id":"hvZ3UnPI4jhJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1747494627078,"user_tz":180,"elapsed":9859,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}},"outputId":"87b4700b-aa24-497a-cdf8-880c56be79a8"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/1.2 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.5/1.2 MB\u001b[0m \u001b[31m16.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m21.6 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m16.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m232.1/232.1 kB\u001b[0m \u001b[31m12.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m95.2/95.2 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m217.1/217.1 kB\u001b[0m \u001b[31m14.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m334.1/334.1 kB\u001b[0m \u001b[31m21.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m125.1/125.1 kB\u001b[0m \u001b[31m8.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m65.8/65.8 kB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.0/119.0 kB\u001b[0m \u001b[31m8.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.9/194.9 kB\u001b[0m \u001b[31m13.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.5/62.5 kB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m103.3/103.3 kB\u001b[0m \u001b[31m7.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.4/44.4 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m72.0/72.0 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["# Instalar Framework ADK de agentes do Google ################################################\n","!pip install -q google-adk\n","\n","# %%\n","# Remove the incorrect google_maps installation line\n","# !pip install -q @google_maps\n","# %%\n","from google.adk.agents import Agent\n","from google.adk.runners import Runner\n","from google.adk.sessions import InMemorySessionService\n","from google.adk.tools import google_search\n","# Remove the incorrect google_maps import line\n","# from google.adk.tools import google_maps\n","from google.genai import types  # Para criar conteúdos (Content e Part)\n","from datetime import date\n","import textwrap # Para formatar melhor a saída de texto\n","from IPython.display import display, Markdown # Para exibir texto formatado no Colab\n","import requests # Para fazer requisições HTTP\n","import warnings\n","\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"OxEUCUvt1aWs","executionInfo":{"status":"ok","timestamp":1747495274970,"user_tz":180,"elapsed":3484,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# Função auxiliar que envia uma mensagem para um agente via Runner e retorna a resposta final\n","def call_agent(agent: Agent, message_text: str) -> str:\n","    # Cria um serviço de sessão em memória\n","    session_service = InMemorySessionService()\n","    # Cria uma nova sessão (você pode personalizar os IDs conforme necessário)\n","    session = session_service.create_session(app_name=agent.name, user_id=\"user1\", session_id=\"session1\")\n","    # Cria um Runner para o agente\n","    runner = Runner(agent=agent, app_name=agent.name, session_service=session_service)\n","    # Cria o conteúdo da mensagem de entrada\n","    content = types.Content(role=\"user\", parts=[types.Part(text=message_text)])\n","\n","    final_response = \"\"\n","    # Itera assincronamente pelos eventos retornados durante a execução do agente\n","    for event in runner.run(user_id=\"user1\", session_id=\"session1\", new_message=content):\n","        if event.is_final_response():\n","          for part in event.content.parts:\n","            if part.text is not None:\n","              final_response += part.text\n","              final_response += \"\\n\"\n","    return final_response"],"metadata":{"id":"_xP4lWhsS5ko"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Função auxiliar para exibir texto formatado em Markdown no Colab\n","def to_markdown(text):\n","  text = text.replace('•', '  *')\n","  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))"],"metadata":{"id":"8dosiodaxfFR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["##########################################\n","# --- Agente 1: Buscador de Vacinas de acordo com a idade --- #\n","##########################################\n","\n","def agente_buscador(idade, data_de_hoje):\n","    buscador = Agent(\n","        name=\"agente_buscador\",\n","        model=\"gemini-2.0-flash\",\n","        description=\"Agente que busca as vacinas disponíveis na rede pública de acordo com a idade\",\n","        tools=[google_search],\n","\n","     # Inserir as instruções do Agente Buscador #################################################\n","        instruction=\"\"\"Você é um assistente de pesquisa que vai usar o google (google_search) para recuperar todas as vacinas\n","         oferecidas pela rede pública na cidade de São Paulo na data de hoje, conforme cinco categorias. São elas:\n","         CRIANÇAS  - de 0 a 10 anos,\n","         ADOLESCENTES  - de 11 a 19 anos\n","         ADULTOS  - de 20 a 59 anos\n","         IDOSOS  - acima de 60 anos\n","         GESTANTES.\n","        Cada usuário vai apresentar uma idade e vai dizer se é GESTANTE ou não e você vai fornecer as vacinas que correspondem\n","        à idade apresentada e ao estda (GESTANTE ou não). Assegure-se também de escolher fontes confiáveis.\n","         Esses dados relevantes devem corresponder ao último mês, no máximo.\n","        \"\"\",\n","    )\n","\n","    entrada_do_agente_buscador = f\"Idade: {idade}\\nData de hoje: {data_de_hoje}\"\n","    # Executa o agente\n","    vacinas_buscadas = call_agent(buscador, entrada_do_agente_buscador)\n","    return vacinas_buscadas"],"metadata":{"id":"o8bqIfi_DyH8","executionInfo":{"status":"ok","timestamp":1747496613597,"user_tz":180,"elapsed":14,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["################################################\n","# --- Agente 2: Localizador de vacinas --- #\n","################################################\n","def agente_localizador(CEP, vacinas_buscadas):\n","    planejador = Agent(\n","        name=\"agente_localizador\",\n","        model=\"gemini-2.0-flash\",\n","        # Inserir as instruções do Agente Planejador #################################################\n","        instruction=\"\"\"Você é um assistente que localiza os pontos de vacinação da rede publica, de acordo com o código\n","        de endereçamento postal (CEP) apresentado pelo usuário, apresentando como resposta os locais próximos, dentro de um alcance de dois quilômetros,\n","        se possível, o endereço destes postos e a distãncia aproximada da localização oferecida pelo usuario. Para isso tudo, você vai  usar o google (google_search)     laneja muito bem o conteúdo para redes sociais. Com base na lista de\n","        lançamentos mais recentes e relevantes buscados, use o google (google_search) ou o @googlemaps, trazendo a localização preciso dos postos.\"\"\",\n","        description=\"Agente que planeja posts\",\n","        tools=[google_search],\n","    )\n","\n","    entrada_do_agente_localizador = f\"Idade:{idade}\\nVacinas buscadas: {vacinas_buscadas}\"\n","    # Executa o agente\n","    localizacao_das_vacinas = call_agent(localizador, entrada_do_agente_localizador)\n","    return localizacao_das_vacinas\n",""],"metadata":{"id":"y3VO1uo5_ghO","executionInfo":{"status":"ok","timestamp":1747501354462,"user_tz":180,"elapsed":61,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Função auxiliar que envia uma mensagem para um agente via Runner e retorna a resposta final\n","from google.adk.agents import Agent\n","from google.adk.runners import Runner\n","from google.adk.sessions import InMemorySessionService\n","from google.adk.tools import google_search\n","from google.genai import types  # Para criar conteúdos (Content e Part)\n","from datetime import date\n","import textwrap # Para formatar melhor a saída de texto\n","from IPython.display import display, Markdown # Para exibir texto formatado no Colab\n","import requests # Para fazer requisições HTTP\n","import warnings\n","\n","warnings.filterwarnings(\"ignore\")\n","\n","\n","def call_agent(agent: Agent, message_text: str) -> str:\n","    # Cria um serviço de sessão em memória\n","    session_service = InMemorySessionService()\n","    # Cria uma nova sessão (você pode personalizar os IDs conforme necessário)\n","    session = session_service.create_session(app_name=agent.name, user_id=\"user1\", session_id=\"session1\")\n","    # Cria um Runner para o agente\n","    runner = Runner(agent=agent, app_name=agent.name, session_service=session_service)\n","    # Cria o conteúdo da mensagem de entrada\n","    content = types.Content(role=\"user\", parts=[types.Part(text=message_text)])\n","\n","    final_response = \"\"\n","    # Itera assincronamente pelos eventos retornados durante a execução do agente\n","    for event in runner.run(user_id=\"user1\", session_id=\"session1\", new_message=content):\n","        if event.is_final_response():\n","          for part in event.content.parts:\n","            if part.text is not None:\n","              final_response += part.text\n","              final_response += \"\\n\"\n","    return final_response\n","\n","# Função auxiliar para exibir texto formatado em Markdown no Colab\n","def to_markdown(text):\n","  text = text.replace('•', '  *')\n","  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))\n","\n","##########################################\n","# --- Agente 1: Buscador de Vacinas de acordo com a idade --- #\n","##########################################\n","\n","def agente_buscador(gestante, idade, data_de_hoje):\n","    buscador = Agent(\n","        name=\"agente_buscador\",\n","        model=\"gemini-2.0-flash\",\n","        description=\"Agente que busca as vacinas disponíveis na rede pública de acordo com a idade\",\n","        tools=[google_search],\n","\n","     # Inserir as instruções do Agente Buscador #################################################\n","        instruction=\"\"\"Você é um assistente de pesquisa que vai usar o google (google_search) para recuperar todas as vacinas\n","         oferecidas pela rede pública na cidade de São Paulo na data de hoje, conforme cinco categorias. São elas:\n","         1 - CRIANÇAS  - de 0 a 10 anos,\n","         2 - ADOLESCENTES  - de 11 a 19 anos\n","         3 - ADULTOS  - de 20 a 59 anos\n","         4 - IDOSOS  - acima de 60 anos\n","         5 - GESTANTES.\n","        Cada usuário vai apresentar uma idade e vai dizer se é GESTANTE ou não.Você vai pesquisar e fornecer as vacinas que correspondem\n","        à idade apresentada. Mas, se o usuário indicar que é gestante, você deve restringir a busca a essa categoria, independentemente da idade.\n","         Assegure-se também de escolher fontes confiáveis.\n","         Esses dados relevantes devem corresponder ao último mês, no máximo.\n","        \"\"\",\n","    )\n","\n","    entrada_do_agente_buscador = f\"Gestante: `{gestante}`\\nIdade: {idade}\\nData de hoje: {data_de_hoje}\"\n","    # Executa o agente\n","    # Corrected the typo here\n","    vacinas_buscadas = call_agent(buscador, entrada_do_agente_buscador)\n","    return vacinas_buscadas\n","\n","################################################\n","# --- Agente 2: Localizador de vacinas --- #\n","################################################\n","def agente_localizador(CEP, vacinas_buscadas):\n","    localizador = Agent(\n","        name=\"agente_localizador\",\n","        model=\"gemini-2.0-flash\",\n","        instruction=\"\"\"Você é um assistente que localiza os pontos de vacinação da rede publica, de acordo com o código\n","        de endereçamento postal (CEP) apresentado pelo usuário, apresentando como resposta os locais próximos, dentro de um alcance de cinco quilômetros,\n","        se possível, o endereço destes postos e a distância aproximada da localização oferecida pelo usuario. Procure as localizações de Unidades Básicas de Saúde (UBS),\n","        Assistências Máedicas Ambulatoriais(AMAs) e AMAs/UBSs integradas.Para isso tudo, você vai  usar o google (google_search) e/ou o @googlemaps Com base na lista de\n","        lançamentos mais recentes e relevantes buscados, use o google (google_search) ou o @googlemaps, trazendo a localização precisa dos\n","        postos para apresentar endereço completo com telefone dos postos.\"\"\",\n","        description=\"Agente que planeja posts\",\n","        tools=[google_search],\n","    )\n","\n","    entrada_do_agente_localizador = f\"CEP:{CEP}\\nVacinas buscadas: {vacinas_buscadas}\"\n","    # Executa o agente\n","    localizacao_das_vacinas = call_agent(localizador, entrada_do_agente_localizador)\n","    return localizacao_das_vacinas\n","\n","data_de_hoje = date.today().strftime(\"%d/%m/%Y\")\n","\n","print(\" Iniciando o Sistema de busca e localização de Vacinas e Postos de Vacinação \")\n","print(\"################################################################################\")\n","print(\"################################################################################\")\n","\n","print(\"\"\" Este é o seu Agente de Informações atualizadas sobre VACINAS na Cidade de São Paulo, SP.\n","Você já se sentiu perdido ou perdida para saber se uma ou outra vacina é obrigatória ou\n","se ela está disponível na rede pública (SUS)?\n","Este Agente vai resolver esse problema para você!\n","Basta informar o que ele pede para que ele indique quais vacinas estão disponíveis\n","para você e onde você pode tomá-las!!! \"\"\")\n","\n","# --- Obter a Idade do Usuário ---\n","gestante = input(\"❓ Você é gestante? Responda com S para SIM ou N para NÃO: \")\n","idade = input(\"❓ Por favor, digite a sua IDADE: \")\n","\n","\n","vacinas_buscadas  = agente_buscador(gestante, idade, data_de_hoje)\n","print(\" RESULTADOS DO AGENTE BUSCADOR\")\n","display(to_markdown(vacinas_buscadas))\n","print(\"#######################################################\")\n","\n","  # --- Obter o CEP do Usuário ---\n","CEP = input(\"❓ Por favor, digite o CEP para buscar os postos de vacinação: \")\n","\n","localizacao_das_vacinas = agente_localizador(CEP, vacinas_buscadas)\n","print(\" RESULTADOS DO AGENTE LOCALIZADOR\")\n","display(to_markdown(localizacao_das_vacinas))\n","print(\"#######################################################\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"l7077xVH18RC","executionInfo":{"status":"ok","timestamp":1747519695493,"user_tz":180,"elapsed":24163,"user":{"displayName":"Marta Lenardon Corradi Rabello","userId":"14584981215838057451"}},"outputId":"dd7ddd8d-a948-43bd-b132-85a15d1f9a0a"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":[" Iniciando o Sistema de busca e localização de Vacinas e Postos de Vacinação \n","################################################################################\n","################################################################################\n"," Este é o seu Agente de Informações atualizadas sobre VACINAS na Cidade de São Paulo, SP.\n","Você já se sentiu perdido ou perdida para saber se uma ou outra vacina é obrigatória ou\n","se ela está disponível na rede pública (SUS)?\n","Este Agente vai resolver esse problema para você!\n","Basta informar o que ele pede para que ele indique quais vacinas estão disponíveis\n","para você e onde você pode tomá-las!!! \n","❓ Você é gestante? Responda com S para SIM ou N para NÃO: N\n","❓ Por favor, digite a sua IDADE: 38\n"," RESULTADOS DO AGENTE BUSCADOR\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"> Ok. Com base nas informações fornecidas (não gestante, 38 anos), vou buscar as vacinas oferecidas pela rede pública na cidade de São Paulo para adultos (20 a 59 anos).\n> \n> \n> Com 38 anos, as vacinas recomendadas para você na rede pública de São Paulo são:\n> \n> *   **Hepatite B:** 3 doses, conforme histórico vacinal.\n> *   **Difteria e Tétano (dT):** Iniciar ou completar o esquema básico de 3 doses, com reforço a cada 10 anos (ou a cada 5 anos em caso de ferimentos graves).\n> *   **Febre Amarela:** Dose única, caso não tenha recebido nenhuma dose antes dos 5 anos de idade. Se recebeu uma dose antes dos 5 anos, é recomendado um reforço.\n> *   **Sarampo, Caxumba e Rubéola (Tríplice Viral SCR):** Uma dose (verificar situação vacinal anterior).\n> *   **Difteria, Tétano e Pertussis (dTpa):** Uma dose de reforço a partir dos 18 anos. Reforço a cada 10 anos ou a cada 5 anos em caso de ferimentos graves. (Recomendada para profissionais da saúde e parteiras tradicionais).\n> \n> **Outras Informações Importantes:**\n> \n> *   **Onde se vacinar:** As vacinas estão disponíveis gratuitamente nas Unidades Básicas de Saúde (UBS) da cidade de São Paulo.\n> *   **Documentação:** Leve o cartão de vacinação para que os profissionais de saúde possam avaliar seu histórico e verificar quais vacinas são necessárias. A ausência do cartão não impede a vacinação.\n> *   **Calendário de Vacinação:** Para mais detalhes sobre o calendário de vacinação, você pode consultar a página da Coordenadoria de Vigilância em Saúde (Covisa) da Prefeitura de São Paulo ou o site do Busca Saúde.\n> *   **Campanha de Vacinação contra a Gripe:** Informe-se sobre a campanha anual de vacinação contra a gripe, pois a vacina é recomendada para adultos e está frequentemente disponível nas UBSs.\n> *   **Vacina contra COVID-19:** Verifique a necessidade de doses de reforço da vacina contra COVID-19, seguindo as recomendações das autoridades de saúde.\n> *   **HPV:** Em alguns casos específicos, como pessoas que vivem com HIV, transplantados e pacientes oncológicos, a vacina contra o HPV pode ser administrada sob prescrição médica.\n> \n> É importante lembrar que este é um guia geral. Recomendo que você procure uma UBS para que um profissional de saúde possa avaliar seu histórico vacinal e indicar as vacinas mais adequadas para você.\n> \n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["#######################################################\n","❓ Por favor, digite o CEP para buscar os postos de vacinação: 04011033\n"," RESULTADOS DO AGENTE LOCALIZADOR\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"> Compreendido! Para te ajudar a encontrar os locais de vacinação mais próximos do CEP 04011-033, vou realizar uma busca por Unidades Básicas de Saúde (UBS), Assistências Médicas Ambulatoriais (AMAs) e AMAs/UBSs integradas num raio de 5km, juntamente com seus respectivos endereços e telefones, se disponíveis.\n> \n> \n> Com base nas pesquisas realizadas, aqui estão algumas opções de locais de vacinação próximos ao CEP 04011-033:\n> \n> *   **AMA/UBS Integrada São Vicente de Paula:** R. Vicente da Costa, 289 - Ipiranga - CEP 04.266-050. Telefone: (11) 2063-7354.\n> *   **UBS/AMA Especialidades Burgo Paulista:** Rua José Silva Alcântara Filho, 1031, Burgo Paulista - CEP: 03680-000. Telefones: (11) 2280-0080 / (11) 2026-1166.\n> *   **AMA/UBS Integrada Padre Manoel da Nóbrega:** Av. Padre Francisco de Toledo, 545, Arthur Alvim - CEP: 03590-120. Telefones: (11) 5239-0685 / (11) 2254-5023 / (11) 2741-7296.\n> *   **AMA/UBS Jardim Grimaldi:** Rua Pedro de Castro Velho, 525 - Jardim Iva - CEP 03.921-000. Telefone: (11) 2024-4909.\n> *   **AMA/UBS Jardim Miriam I – Manoel Soares de Oliveira:** Avenida Santo Afonso,419 - Jardim. Miriam - CEP 04.426-000. Telefone: (11) 5626-7576.\n> \n> Para confirmar se as vacinas que você precisa estão disponíveis e os horários de funcionamento, recomendo entrar em contato com as unidades por telefone antes de se dirigir ao local.\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["#######################################################\n"]}]}]}